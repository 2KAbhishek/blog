<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Productivity on 2KAbhishek Blogs</title><link>https://2kabhishek.github.io/blog/tags/productivity/</link><description>Recent content in Productivity on 2KAbhishek Blogs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>©2023 2KAbhishek</copyright><lastBuildDate>Sun, 07 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://2kabhishek.github.io/blog/tags/productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>Keybindings FTW! ⌨️🥂</title><link>https://2kabhishek.github.io/blog/keybindings/</link><pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/keybindings/</guid><description>Keybindings or keyboard shortcuts are essential to an efficient workflow. They help you navigate faster, be more productive and reduce the time you spend on repetitive tasks.
My workflow is heavily keyboard driven and primmarily relies on a browser and a terminal within a tiling window manager, for these I use my own set of keybindings. Because I work on multiple machines and operating systems, I have to keep track of all the keybindings I use and make sure they are somewhat consistent across all the systems and tools.</description></item><item><title>How I organize my zsh config 🐚📂</title><link>https://2kabhishek.github.io/blog/how-i-organize-my-zsh-config/</link><pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/how-i-organize-my-zsh-config/</guid><description>I have been using zsh as my shell for over 6 years now. During this time, I&amp;rsquo;ve experimented with various configurations and setups, and I&amp;rsquo;ve finally settled on one that I like. In this post, I will discuss how I organize my zsh config and how you can do it too.
If you want a longer video version, check you ZSH Deep Dive
Let&amp;rsquo;s get started.
Config Structure Before diving into the config files, let&amp;rsquo;s examine the structure of my config directory:</description></item><item><title>win2k - Ultimate Dev Setup for Windows 🪟🪄</title><link>https://2kabhishek.github.io/blog/win2k-ultimate-dev-setup-for-windows/</link><pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/win2k-ultimate-dev-setup-for-windows/</guid><description>Do you find the Windows dev environment lacking? Do you miss your precious CLI tools on Windows?
Well I felt the same way too. That&amp;rsquo;s why I combined a package manager, a powerful CLI editor, tiling window management and lots of other tools in a easy to set up solution.
Introducing win2k win2k is a set of handcrafted configs for setting up a complete dev environment on Windows.
It makes developing on Windows much more pleasant for CLI lovers.</description></item><item><title>tmux-tilit - better tiling for tmux 🪟🪓</title><link>https://2kabhishek.github.io/blog/tmux-tilit-better-tiling-for-tmux/</link><pubDate>Wed, 11 Jan 2023 00:58:00 +0530</pubDate><guid>https://2kabhishek.github.io/blog/tmux-tilit-better-tiling-for-tmux/</guid><description>If you have used tmux then you already know that tmux provides ways to create multiple panes on your terminal among many other things.
You might have also felt that the default way of doing these things is kind of clumsy and doesn&amp;rsquo;t feel natural.
Introducing tmux-tilit: What is this tmux-tilit is a tmux plugin that adds tiling window manager like features and keybindings to tmux.
Inspiration tmux-tilit was inspired by tmux-tilish.</description></item></channel></rss>