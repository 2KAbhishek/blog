<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>career on 2KAbhishek Blogs</title><link>https://2kabhishek.github.io/blog/tags/career/</link><description>Recent content in career on 2KAbhishek Blogs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>©2022 2KAbhishek</copyright><lastBuildDate>Mon, 14 Aug 2023 00:10:46 +0530</lastBuildDate><atom:link href="https://2kabhishek.github.io/blog/tags/career/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Think Like an Architect 🧠🏛️</title><link>https://2kabhishek.github.io/blog/articles/think-like-architect/</link><pubDate>Mon, 14 Aug 2023 00:10:46 +0530</pubDate><guid>https://2kabhishek.github.io/blog/articles/think-like-architect/</guid><description>Have you ever wondered what skills it takes to be a software architect?
While civil architects design awe-inspiring structures that stand the test of time, software architects craft intricate architectures that form the foundation of modern technology. Software architects mold the digital landscape as we know it.
Architects possess a unique mindset that enables them to design and develop robust software architectures. Their ability to think strategically, make informed decisions, and balance trade-offs is vital for creating successful systems.</description></item><item><title>Data Structure and Algorithms are Overrated! 🚫🪴</title><link>https://2kabhishek.github.io/blog/articles/dsa-is-overrated/</link><pubDate>Fri, 28 Oct 2022 00:10:46 +0530</pubDate><guid>https://2kabhishek.github.io/blog/articles/dsa-is-overrated/</guid><description>🚫 DSA is OVERRATED!! 🚫 I recently saw some posts on LinkedIn and Twitter about how a 1% decrease in load time increased revenues for a company.
Sure, I agree, we all want fast software. 🚀
Here&amp;rsquo;s the thing though, One can build fast and robust software without spending 1000 hours on Data Structure and Algorithms. ✨
Believing that crazy DSA skills are needed for optimizing software is just not right, any good developer will look at 20 other things before even thinking about runtime complexity.</description></item></channel></rss>