<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Filesystem on 2KAbhishek Blogs</title><link>https://2kabhishek.github.io/blog/tags/filesystem/</link><description>Recent content in Filesystem on 2KAbhishek Blogs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>©2023 2KAbhishek</copyright><lastBuildDate>Wed, 26 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://2kabhishek.github.io/blog/tags/filesystem/index.xml" rel="self" type="application/rss+xml"/><item><title>Do Not Parse ls! (Use this instead) ❌📂</title><link>https://2kabhishek.github.io/blog/2024/06/do-not-parse-ls-use-this-instead/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/2024/06/do-not-parse-ls-use-this-instead/</guid><description>TLDR ls parsing bad, do this
ls -1iq | grep -o &amp;#39;^ *[0-9]*&amp;#39; # get file inodes find /path/to/search -inum &amp;lt;inode_number&amp;gt; # convert inodes to file info You can continue your doomscroll now 👍🏼
You still here? (thanks!! 😇) ok, then read on:
Do you know why its not recommended to parse ls output for operation on a list of files? It&amp;rsquo;s because the UNIX system allows any characters in filenames so things like newline, whitespaces, ~ (and a lot more weird chars) are all valid.</description></item></channel></rss>