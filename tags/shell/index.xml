<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on 2KAbhishek Blogs</title><link>https://2kabhishek.github.io/blog/tags/shell/</link><description>Recent content in Shell on 2KAbhishek Blogs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>©2023 2KAbhishek</copyright><lastBuildDate>Wed, 26 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://2kabhishek.github.io/blog/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Do Not Parse ls! (Use this instead) ❌📂</title><link>https://2kabhishek.github.io/blog/2024/06/do-not-parse-ls-use-this-instead/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/2024/06/do-not-parse-ls-use-this-instead/</guid><description>TLDR ls parsing bad, do this
ls -1iq | grep -o &amp;#39;^ *[0-9]*&amp;#39; # get file inodes find /path/to/search -inum &amp;lt;inode_number&amp;gt; # convert inodes to file info You can continue your doomscroll now 👍🏼
You still here? (thanks!! 😇) ok, then read on:
Do you know why its not recommended to parse ls output for operation on a list of files? It&amp;rsquo;s because the UNIX system allows any characters in filenames so things like newline, whitespaces, ~ (and a lot more weird chars) are all valid.</description></item><item><title>How I organize my zsh config 🐚📂</title><link>https://2kabhishek.github.io/blog/2024/05/how-i-organize-my-zsh-config/</link><pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><guid>https://2kabhishek.github.io/blog/2024/05/how-i-organize-my-zsh-config/</guid><description>I have been using zsh as my shell for over 6 years now. During this time, I&amp;rsquo;ve experimented with various configurations and setups, and I&amp;rsquo;ve finally settled on one that I like. In this post, I will discuss how I organize my zsh config and how you can do it too.
If you want a longer video version, check you ZSH Deep Dive
Let&amp;rsquo;s get started.
Config Structure Before diving into the config files, let&amp;rsquo;s examine the structure of my config directory:</description></item><item><title>Posh2K - A universal prompt for power users 💪🌈</title><link>https://2kabhishek.github.io/blog/2022/12/posh2k-a-universal-prompt-for-power-users/</link><pubDate>Sun, 04 Dec 2022 00:58:00 +0530</pubDate><guid>https://2kabhishek.github.io/blog/2022/12/posh2k-a-universal-prompt-for-power-users/</guid><description>What is this Posh2K is a prompt for oh-my-posh, it works on all shells, has multiple segments with aesthetically pleasing colors.
Inspiration Most of my workflow is based on the command line, recently I had to use a Windows system for some work and was really displeased by the CLI experience.
So, I needed a prompt that can work across shells and has support for different segments and Posh2K was born.</description></item></channel></rss>